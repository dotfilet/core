#!/usr/bin/env zsh

autoload -U colors
colors

color_format() (
  string="${@}"
  stack=(default)
  
  while [[ "${string}" =~ '{{([^}]+)}}' ]]; do
    echo -n "${string:0:($MBEGIN - 1)}"

    color="${match[1]}"
    if [[ "${color}" == "/" ]]; then
      current="${stack[-1]}"
      shift -p stack
      if [[ "${current}" == "dim" ]]; then
        echo -n "[22m"
      else
        color="${stack[-1]}"
      fi
    else
      stack+=("${color}")
    fi

    if [[ "${color}" == "dim" ]]; then
      echo -n "[2m"
    else
      echo -n "${fg[$color]}"
    fi

    string="${string:$MEND}"
  done
  echo -n "${string}"
)

log() (
  echo $(color_format "$@[0m") >&2
)

log_debug() (
  if [[ ! -v FILET_VERBOSE ]]; then return; fi
  echo "{{dim}}$@"
)

log_warn() (
  log "{{yellow}}@" 
)

log_error() (
  log "{{red}}$@" 
)

fail() (
  log_error "$@"
  return 1
)
evaluate_script() {
  script="${1}"

  if [[ ! -f "${script}" ]]; then
    fail "Can't locate filet script {{magenta}}${script}{{/}} ({{magenta}}${script:A}{{/}})"
  fi
  
  if [[ ! -v FILET_SCRIPT_ENVIRONMENT_LOADED ]]; then
    source "${FILET_SRC}"/script-environment.sh 
    FILET_SCRIPT_ENVIRONMENT_LOADED=yes
    FILET_ROOT_SCRIPT="${script:A}"
    FILET_ROOT_DIR="${script:A:h}"
    FILET_STATE_DIR="${FILET_ROOT_DIR}/.filet"
    FILET_REPOSITORIES=()
  fi

  previous_module_root="${FILET_CURRENT_MODULE_ROOT}"
  FILET_CURRENT_MODULE_ROOT="${script:A:h}"

  source "${script}"

  FILET_CURRENT_MODULE_ROOT="${previous_module_root}"
}

command_apply_help() (
  log "Usage: {{cyan}}filet{{/}} {{yellow}}apply{{/}} {{magenta}}file.filet{{/}}"
)

command_apply_main() (
  root_script="${1}"
  if [[ "${root_script}" == "" ]]; then
    command_apply_help
    return 1
  fi

  cd "${root_script:h}"
  evaluate_script "${root_script}"
)
command_help_main() (
  command="${1}"

  if [[ "${command}" == "" ]]; then
    default_help
  elif ! is_function "command_${command}_main"; then
    log_error "Unknown command: {{yellow}}${command}{{/}}"
    log
    default_help
  elif ! is_function "command_${command}_help"; then
    log_error "The {{yellow}}${command}{{/}} command failed to implement command_${command}_help"
    log
    default_help
  else
    "command_${command}_help"
  fi

  exit 1
)

default_help() (
  log "Usage: {{cyan}}filet{{/}} {{yellow}}command{{/}}"
)

main() (
  log

  positional=()
  flags=()
  for argument in "${@}"; do
    if [[ "${argument}" =~ ^-+ ]]; then
      flags+=("${argument}")
    else
      positional+=("${argument}")
    fi
  done

  if (( $flags[(Ie)--help] )) || (( $flags[(Ie)-h] )) || ! is_function "command_${positional[1]}_main"; then
    if [[ "${positional[1]}" != "help" ]]; then
      positional=(help "${positional[@]}")
    fi
  fi
  
  (
    set -e
    "command_${positional[1]}_main" "${positional[@]:1}" "${flags[@]}"
  )
  result=$?

  log

  return $result
)

is_function() (
  typeset -f "${1}" > /dev/null
)

main "$@"
